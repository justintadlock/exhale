////
/// Alignment classes.
///
/// Primarily, we use this to build out style rules for the core WordPress
/// `.align*` classes.
///
/// @group  Utilities
/// @author Justin Tadlock <justintadlock@gmail.com>
/// @link   https://themehybrid.com/themes/exhale
////

@media ( max-width: $content-width-padded ) {

	[class^="wp-container-"][class*="wp-block"] > * {
		margin-left: $spacing-global;
		margin-right: $spacing-global;
	}

	[class^="wp-container-"][class*="wp-block"] > .alignwide,
	[class^="wp-container-"][class*="wp-block"] > .alignfull {
		margin-left: auto;
		margin-right: auto;
		max-width: 100%;
	}
}


.alignfull {

	// Stack full-aligned elements with no whitespace in
	// between by default.
	//
	// The Group block (maybe others) sometimes has a <style>
	// element that follows, so we want to skip that. The Duotone
	// Image/Cover filter outputs a hidden <svg>, so we're
	// skipping that too. By targeting the "hidden" style, we
	// can cover some other possible use cases.

	+ .alignfull,
	+ [style*=hidden] + .alignfull,
	+ style + .alignfull,
	+ style + [style*=hidden] + .alignfull,
	+ [style*=hidden] + svg .alignfull {
		margin-top: 0;
	}
}



// Left alignment.
.alignleft {
	float:  left;
	margin-right:  1.5em !important;
	margin-bottom: 0.25em;
}

// Right alignment.
.alignright {
	float:  right;
	margin-left: 1.5em !important;
	margin-bottom: 0.25em;
}


// Align full and wide classes.
.alignwide,
.alignfull,
.aligncenter {
	clear: both;
}

p [class*=align] {
	//margin-bottom: 0;
}

.alignfull,
.alignwide {
	max-width:    100%;
	margin-left:  auto;
	margin-right: auto;
}

@media( min-width: #{ $width-alignwide } ) {

	.alignwide {
		max-width: $width-alignwide;
	}
}

/// Removes the whitespace between full-width elements so that they're stacked
/// directly on top of one another.  All the ridiculous CSS wrangling is due to
/// Gutenberg not adding a `.has-background` class to blocks with a background.
///
/// @link https://github.com/WordPress/gutenberg/issues/11172
